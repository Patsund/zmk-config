/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&mt {
    tapping-term-ms = <300>;
    flavor = "tap-preferred";
};

/ {
    combos {
        compatible = "zmk,combos";

        ae {
            bindings = <&kp LA(APOS)>;
            key-positions = <18 21>;
        };

        leftae {
            bindings = <&kp LA(APOSTROPHE)>;
            key-positions = <16 21>;
        };

        ue_combo {
            bindings = <&ue>;
            key-positions = <10 11>;
        };
    };

    macros {
        ue: ue {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp U &kp E>;

            label = "UE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp B  &kp L  &kp D     &kp W           &kp Z        &mt SEMI COMMA  &kp F  &kp O          &kp U      &kp J     &kp BSPC
&kp LCTRL  &kp N  &kp R  &kp T     &mt LEFT_ALT S  &kp G        &mt LEFT_ALT Y  &kp H  &kp A          &kp E      &kp I     &kp SQT
&kp LSHFT  &kp Q  &kp X  &kp M     &kp C           &kp V        &kp K           &kp P  &kp PERIOD     &kp MINUS  &kp FSLH  &kp ESC
                         &kp LGUI  &mo 1           &kp SPACE    &kp RET         &mo 2  &kp BACKSPACE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB           &kp N1        &kp N2    &kp N3        &kp N4     &kp N5        &kp N6        &kp N7    &kp N8    &kp N9        &kp N0     &kp BSPC
&kp LEFT_CONTROL  &kp NUMBER_6  &kp N7    &kp N8        &kp N9     &kp N0        &kp LA(LEFT)  &kp LEFT  &kp DOWN  &kp UP_ARROW  &kp RIGHT  &kp LA(RIGHT)
&kp LSHFT         &kp LEFT      &kp DOWN  &kp UP_ARROW  &kp RIGHT  &kp ESCAPE    &trans        &kp F10   &kp F11   &kp F12       &trans     &trans
                                          &kp LGUI      &trans     &kp SPACE     &kp RET       &trans    &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL   &kp AT        &kp HASH  &kp DLLR   &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &kp TILDE  &kp QUESTION  &kp SEMI  &kp COLON  &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &kp F1     &kp F2        &kp F7    &kp F8     &kp F9       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                    &kp LGUI  &trans     &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };
    };
};
